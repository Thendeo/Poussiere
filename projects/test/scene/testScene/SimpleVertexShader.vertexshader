#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace; 
layout(location = 1) in vec2 vertexUV; 

uniform mat4 MVP; 

// Données de sortie ; vont être interpolées pour chaque fragment. 
out vec2 UV; 

void main(){ 
 
    // Obtient la position du sommet, dans l'espace de découpe : MVP * position
    vec4 v = vec4(vertexPosition_modelspace,1); // Transforme un vecteur 4D homogène, vous vous souvenez ?
    gl_Position = MVP * v; 
	
    // Coordonnées UV du sommet. Pas d'espace spécifique de coordonnées pour celles-ci. 
    UV = vertexUV; 
}