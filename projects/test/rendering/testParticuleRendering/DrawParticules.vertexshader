#version 330 core

//layout(location = 0) in vec3 vertexColor; 
//layout(location = 1) in vec2 vertexColor; 

uniform mat4 MVP; 

// Cartographie des particules
uniform sampler2D myTextureSampler; 

// Données de sortie ; vont être interpolées pour chaque fragment. 
//out vec2 UV; 

void main(){ 
 
	// Get pixel pos from vertex index
	vec2 tex_coord;
	tex_coord.x = gl_VertexID % 64 / 100.0F;
	tex_coord.y = gl_VertexID / 64 / 100.0F;
	
   // vec4 l_pos = vec4(texture(myTextureSampler, tex_coord).rgb, 1.0f);
	// Working from gl_VertexID
	//vec4 l_pos = vec4(gl_VertexID%64-32, gl_VertexID/64-32, 0.0f, 1.0f);

	// Test from value of sampler
	vec3 l_posFromTex = texture(myTextureSampler, tex_coord).rgb;
	vec4 l_pos = vec4(l_posFromTex.x * 100.0F - 50.0F, l_posFromTex.y * 100.0F - 50.0F, l_posFromTex.z * 100.0F - 50.0F, 1.0f);


	gl_Position = MVP * l_pos;
	
    // Coordonnées UV du sommet. Pas d'espace spécifique de coordonnées pour celles-ci. 
    //UV = vertexUV; 
}